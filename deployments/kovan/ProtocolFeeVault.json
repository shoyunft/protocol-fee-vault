{
  "address": "0xa1f3b347F33726e7637452E96C464ED55e7ec7D2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "call",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf60cc705c9b1bce553171128113de36fa8b97f008006544d5221c1df62efb752",
  "receipt": {
    "to": null,
    "from": "0x5b8C253517b6Bd003369173109693B01cb6841B5",
    "contractAddress": "0xa1f3b347F33726e7637452E96C464ED55e7ec7D2",
    "transactionIndex": 0,
    "gasUsed": "314542",
    "logsBloom": "0x
    "blockHash": "0x8e3a7f0ff8be2e446a45a3451961fbde5ea740e82dd53e2763e3c068f3d4854f",
    "transactionHash": "0xf60cc705c9b1bce553171128113de36fa8b97f008006544d5221c1df62efb752",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 28463839,
        "transactionHash": "0xf60cc705c9b1bce553171128113de36fa8b97f008006544d5221c1df62efb752",
        "address": "0xa1f3b347F33726e7637452E96C464ED55e7ec7D2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b8c253517b6bd003369173109693b01cb6841b5"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x8e3a7f0ff8be2e446a45a3451961fbde5ea740e82dd53e2763e3c068f3d4854f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 28463839,
        "transactionHash": "0xf60cc705c9b1bce553171128113de36fa8b97f008006544d5221c1df62efb752",
        "address": "0xa1f3b347F33726e7637452E96C464ED55e7ec7D2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000005b8c253517b6bd003369173109693b01cb6841b5",
          "0x00000000000000000000000058e7a64b99968a0f388c3dbc60594c4aed169a8a"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x8e3a7f0ff8be2e446a45a3451961fbde5ea740e82dd53e2763e3c068f3d4854f"
      }
    ],
    "blockNumber": 28463839,
    "cumulativeGasUsed": "314542",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x58e7A64B99968A0f388c3dbc60594C4AEd169a8a"
  ],
  "solcInputHash": "c44d239f22ff9f8d6d4e4a235564da70",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProtocolFeeVault.sol\":\"ProtocolFeeVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/ProtocolFeeVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ProtocolFeeVault is Ownable {\\n    constructor(address _owner) {\\n        transferOwnership(_owner);\\n    }\\n\\n    function call(address target, bytes calldata data) payable onlyOwner external {\\n        (bool success, bytes memory reason) = target.call{value: msg.value}(data);\\n        require(success, string(reason));\\n    }\\n}\\n\",\"keccak256\":\"0xca987b88376065f167fddb685d351e893deba1695cc6f91aea48629ab147407b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105c83803806105c883398101604081905261002f91610167565b61003833610047565b61004181610097565b50610195565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b600060208284031215610178578081fd5b81516001600160a01b038116811461018e578182fd5b9392505050565b610424806101a46000396000f3fe60806040526004361061003f5760003560e01c80631b8b921d14610044578063715018a6146100595780638da5cb5b1461006e578063f2fde38b1461009a575b600080fd5b6100576100523660046102d8565b6100ba565b005b34801561006557600080fd5b5061005761017a565b34801561007a57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100a657600080fd5b506100576100b53660046102b7565b6101b0565b6000546001600160a01b031633146100ed5760405162461bcd60e51b81526004016100e4906103b9565b60405180910390fd5b600080846001600160a01b031634858560405161010b929190610356565b60006040518083038185875af1925050503d8060008114610148576040519150601f19603f3d011682016040523d82523d6000602084013e61014d565b606091505b50915091508181906101725760405162461bcd60e51b81526004016100e49190610366565b505050505050565b6000546001600160a01b031633146101a45760405162461bcd60e51b81526004016100e4906103b9565b6101ae600061024b565b565b6000546001600160a01b031633146101da5760405162461bcd60e51b81526004016100e4906103b9565b6001600160a01b03811661023f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e4565b6102488161024b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102b257600080fd5b919050565b6000602082840312156102c8578081fd5b6102d18261029b565b9392505050565b6000806000604084860312156102ec578182fd5b6102f58461029b565b9250602084013567ffffffffffffffff80821115610311578384fd5b818601915086601f830112610324578384fd5b813581811115610332578485fd5b876020828501011115610343578485fd5b6020830194508093505050509250925092565b6000828483379101908152919050565b6000602080835283518082850152825b8181101561039257858101830151858201604001528201610376565b818111156103a35783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220550958879b08f85de33edd16f6b989d8b94137dc3bc2b9e63342a144361c631764736f6c63430008030033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80631b8b921d14610044578063715018a6146100595780638da5cb5b1461006e578063f2fde38b1461009a575b600080fd5b6100576100523660046102d8565b6100ba565b005b34801561006557600080fd5b5061005761017a565b34801561007a57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100a657600080fd5b506100576100b53660046102b7565b6101b0565b6000546001600160a01b031633146100ed5760405162461bcd60e51b81526004016100e4906103b9565b60405180910390fd5b600080846001600160a01b031634858560405161010b929190610356565b60006040518083038185875af1925050503d8060008114610148576040519150601f19603f3d011682016040523d82523d6000602084013e61014d565b606091505b50915091508181906101725760405162461bcd60e51b81526004016100e49190610366565b505050505050565b6000546001600160a01b031633146101a45760405162461bcd60e51b81526004016100e4906103b9565b6101ae600061024b565b565b6000546001600160a01b031633146101da5760405162461bcd60e51b81526004016100e4906103b9565b6001600160a01b03811661023f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e4565b6102488161024b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102b257600080fd5b919050565b6000602082840312156102c8578081fd5b6102d18261029b565b9392505050565b6000806000604084860312156102ec578182fd5b6102f58461029b565b9250602084013567ffffffffffffffff80821115610311578384fd5b818601915086601f830112610324578384fd5b813581811115610332578485fd5b876020828501011115610343578485fd5b6020830194508093505050509250925092565b6000828483379101908152919050565b6000602080835283518082850152825b8181101561039257858101830151858201604001528201610376565b818111156103a35783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220550958879b08f85de33edd16f6b989d8b94137dc3bc2b9e63342a144361c631764736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ProtocolFeeVault.sol:ProtocolFeeVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}